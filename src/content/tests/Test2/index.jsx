import React from "react";
import PropTypes from "prop-types";
import { TestContainer } from "../../../modules/TestContainer";
import {
  CHECKBOX_TYPE,
  INPUT_TYPE,
  RADIO_TYPE,
} from "../../../modules/TestContainer/constants";

export function Test2(color, ...props) {
  const data = [
    {
      type: RADIO_TYPE,
      question:
        "Какое определение термина «Архитектура» относится к информационным системам:",
      answers: [
        {
          text: "Проектирование и постройка различных сооружений",
        },
        {
          text: "Абстрактная модель, в которой отсутствуют подробности реализации",
        },
        {
          text: "Концепция, определяющая модель, структуру, выполняемые",
        },
        {
          text: "Функции и взаимосвязь компонентов информационной системы",
        },
      ],
      answer: "Концепция, определяющая модель, структуру, выполняемые",
    },
    {
      type: RADIO_TYPE,
      question:
        "Автономная архитектура подразумевает наличие всех функциональных компонентов системы на одном физическом устройстве, например компьютере, и не должна иметь связей с внешней средой.",
      answers: [
        {
          text: "Истинно",
        },
        {
          text: "Ложно",
        },
      ],
      answer: "Истинно",
    },
    {
      type: RADIO_TYPE,
      question:
        "Автономная архитектура подразумевает наличие всех функциональных компонентов системы на разных физических устройствах, и должна иметь связи с внешней средой.",
      answers: [
        {
          text: "Истинно",
        },
        {
          text: "Ложно",
        },
      ],
      answer: "Ложно",
    },
    {
      type: RADIO_TYPE,
      question:
        "Что можно отнести к централизованной архитектуре:",
      answers: [
        {
          text: "Компоненты системы распределяются между вычислительным узлом и терминальной станцией, за которой работает пользователь.",
        },
        {
          text: "В процессе построения корпоративной информационной системы не должно формироваться несвязанных узлов или модулей.",
        },
        {
          text: "Функциональные компоненты информационной системы распределяются по имеющимся узлам в зависимости от поставленных целей и задач.",
        },
      ],
      answer: "Компоненты системы распределяются между вычислительным узлом и терминальной станцией, за которой работает пользователь.",
    },
    {
      type: RADIO_TYPE,
      question:
        "Что можно отнести к централизованной архитектуре:",
      answers: [
        {
          text: "Компоненты системы распределяются между вычислительным узлом и терминальной станцией, за которой работает пользователь.",
        },
        {
          text: "В процессе построения корпоративной информационной системы не должно формироваться несвязанных узлов или модулей.",
        },
        {
          text: "Функциональные компоненты информационной системы распределяются по имеющимся узлам в зависимости от поставленных целей и задач.",
        },
      ],
      answer: "Компоненты системы распределяются между вычислительным узлом и терминальной станцией, за которой работает пользователь.",
    },
    {
      type: INPUT_TYPE,
      question:
        "Универсальное представление структуры данных в рамках коммерческого предприятия, независимое от конечной реализации базы данных и аппаратной платформы называется…  (введите два слова через пробел в именительном падеже)",
      answer: "Концептуальная схема",
    },
    {
      type: RADIO_TYPE,
      question:
        "Выберите истинное утверждение о типах связи:",
      answers: [
        {
          text: "Идентифицирующая связь отображается пунктирной линией, неидентифицирующая – сплошной.",
        },
        {
          text: "Необязательность обозначается крестиком.",
        },
        {
          text: "Все утверждения истины.",
        },
        {
          text: "Все утверждения ложны.",
        },
      ],
      answer: "Все утверждения ложны.",
    },
    {
      type: RADIO_TYPE,
      question:
        "В каких случаях можно применять в модели конструкцию – иерархия наследования:",
      answers: [
        {
          text: "В тех случаях, когда две и более сущностей по набору атрибутов незначительно отличаются друг от друга.",
        },
        {
          text: "В тех случаях, когда две и более сущностей по набору атрибутов сильно отличаются друг от друга.",
        },
        {
          text: "В тех случаях, когда два и более атрибута по набору сущностей сильно отличаются друг от друга.",
        },
        {
          text: "В тех случаях, когда два и более атрибута по набору сущностей незначительно отличаются друг от друга.",
        },
      ],
      answer: "В тех случаях, когда две и более сущностей по набору атрибутов незначительно отличаются друг от друга.",
    },
    {
      type: INPUT_TYPE,
      question:
        "Атрибут или множество атрибутов, которые единственным образом идентифицируют экземпляр сущности называется... (введите одно или два слова через пробел в именительном падеже)",
      answer: "суперключ",
    },
    {
      type: INPUT_TYPE,
      question:
        "Суперключ, который не содержит подмножества, также являющегося суперключом данной сущности, т.е. суперключ, содержащий минимально необходимый набор атрибутов, единственным образом идентифицирующих экземпляр сущности... (введите одно или два слова через пробел в именительном падеже)",
      answer: "потенциальный ключ",
    },
    {
      type: INPUT_TYPE,
      question:
        "Потенциальный ключ, который выбран для уникальной идентификации экземпляров внутри сущности... (введите одно или два слова через пробел в именительном падеже)",
      answer: "первичный ключ",
    },
    {
      type: INPUT_TYPE,
      question:
        "Потенциальный ключ, которые не выбран в качестве уникальной идентификации экземпляров внутри сущности... (введите одно или два слова через пробел в именительном падеже)",
      answer: "альтернативный ключ",
    },
  ];
  return <TestContainer data={data} />;
}

Test2.propTypes = {};
