import React from 'react'
import './styles.scss'
import PropTypes from 'prop-types'
import { Image } from '../../../modules/Image'
import { Table } from 'antd'
import { LifeCicle } from './components/LIfeCIcle'
export function Lecture2(props) {

    const columns = [
        {
            title: 'Классический ЖЦ',
            dataIndex: '1',
            colSpan: 1,
            render: (text, r, index) => {
                const obj = {
                    children: text,
                    props: {},
                };

                if (index === 2) {
                    obj.props.rowSpan = 4;
                }
                if ((index > 2 && index < 6) || index > 8) {
                    obj.props.rowSpan = 0;
                }
                if (index === 8) {
                    obj.props.rowSpan = 3;
                }

                return obj;

            }
        },
        {
            title: 'ИСО/ МЭК 12207',
            dataIndex: '2',
            colSpan: 1,
            render: (text, r, index) => {
                const obj = {
                    children: text,
                    props: {},
                };

                if (index === 1) {
                    obj.props.rowSpan = 7;
                }
                if ((index > 1 && index < 8) || (index > 8 && index < 10)) {
                    obj.props.rowSpan = 0;
                }
                if (index === 8) {
                    obj.props.rowSpan = 2;
                }
                return obj;

            }
        },
        {
            title: 'ГОСТ 34.601-90 и ОРММ ИСЖГ 5.03-00',
            colSpan: 3,
            children: [
                {
                    title: 'Стадия',
                    dataIndex: '3',
                    key: '3',
                    colSpan: 2,
                    render: (text, r, index) => {
                        const obj = {
                            children: text,
                            props: {},
                        };
                        if (index > 1) {
                            obj.props.colSpan = 2;
                        }

                        return obj;

                    }
                },
                {
                    title: 'Стадия',
                    dataIndex: '4',
                    key: '4',
                    colSpan: 0,
                    render: (text, r, index) => {
                        const obj = {
                            children: text,
                            props: {},
                        };
                        if (index > 1) {
                            obj.props.colSpan = 0;
                        }

                        return obj;

                    }
                },
                {
                    title: 'Основные этапы работы',
                    dataIndex: '5',
                    key: '5',
                    colSpan: 1,
                    render: (text, r, index) => {
                        if (typeof text === 'function') {
                            return text()
                        }
                        return text
                    }
                },

            ],
            render: (text, r, index) => {
                const obj = {
                    children: text,
                    props: {},
                };
                if (index > 1) {
                    obj.props.colSpan = 2;
                }

                return obj;

            },
        },

    ];

    const data = [
        {
            1: 'Системный анализ',
            2: 'Заказ',
            3: 'Формирование требований к ИС',
            4: 'Технико-экономическое обоснование (ТЭО)',
            5: () => {
                return (
                    <ol>
                        <li>Обследование объекта и обоснование необходимости создания ИС</li>
                        <li>Формирование требований заказчика к ИС</li>
                        <li>Оформление договора между Разработчиком и Заказчиком</li>
                    </ol>
                )
            },
        },
        {
            1: 'Анализ требований',
            2: 'Разработка',
            3: 'Разработка концепции ИС (для комплексных многоуровневых и интегрированных систем)',
            4: 'ТЭО',
            5: () => {
                return (<ol>
                    <li>Поиск путей удовлетворения требований Заказчика на уровне концепции создаваемой системы (структура, функции, программно-техническая платформа, режимы).</li>
                    <li>Рассмотрение альтернативных вариантов концепции системы, их анализ и выбор лучшей концепции.</li>
                </ol>)
            },
        },
        {
            1: 'Проектирование',
            2: 'Разработка',
            3: 'Техническое задание (ТЗ)',
            5: 'Разработка, согласование и утверждение ТЗ на создание ИС.',
        },
        {

            3: 'Эскизный проект (для комплексных и многоуровневых и интегрированных систем)',
            5: 'Разработка предварительных проектных решений по системе и её частям.',
        },
        {
            3: 'Пилотпроект (макетирование, прототипирование) (при необходимости)',
            5: () => {
                return (
                    <ol>
                        <li>Разработка частей проекта для испытаний в реальных, но ограниченных условиях функционирования с целью проверки предварительно принятых решений.</li>
                        <li>Проведение испытаний на головном объекте или стенде и анализ результатов ис-пытаний.</li>
                    </ol>
                )
            },
        },
        {
            3: 'Технический проект',
            5: () => {
                return (
                    <ol>
                        <li>Разработка проектных решений по системе и её частям.</li>
                        <li>Разработка документации на ИС и ее части.</li>
                        <li>Разработка документации на поставку изделий для комплектования ИС и/или тех-нических заданий на их разработку.</li>
                        <li>Разработка заданий на проектирование в смежных частях проекта объекта автоматизации (строительство, монтаж, наладка и др.).</li>
                    </ol>
                )
            },
        },
        {
            1: 'Кодирование (реализация)',
            3: 'Рабочая документация',
            5: () => {
                return (
                    <ol>
                        <li>Разработка рабочей документации на систему и ее части.</li>
                        <li>Разработка программных и технических средств и/или адаптация приобретаемых.</li>
                        <li>Тестирование средств.</li>
                    </ol>
                )
            },
        },
        {
            1: 'Тестирование',
            3: 'Интеграция и тестирование',
            5: () => {
                return (
                    <ol>
                        <li>Загрузка БД типовыми исходными данными и тестами.</li>
                        <li>Интеграция программ и тестирование в имитированной среде.</li>
                        <li>Интеграция программных средств с аппаратными в реальной операционной и внешней среде.</li>
                        <li>Тестирование в реальной среде.</li>
                        <li>Разработка комплекта документации для пользователей.</li>
                    </ol>
                )
            }
        },
        {
            1: 'Внедрение и сопровождение',
            2: 'Разработка и эксплуатация',
            3: 'Ввод в действие на головном объекте (ввод в эксплуатацию, внедрение)',
            5: () => {
                return (
                    <ol>
                        <li>Подготовка объекта автоматизации к вводу ИС в действие.</li>
                        <li>Подготовка персонала.</li>
                        <li>Комплектация ИС поставленными изделиями.</li>
                        <li>Проведение предварительных испытаний и передача ИС для опытной эксплуатации</li>
                        <li>Проведение опытной эксплуатации.</li>
                        <li>Проведение приемочных испытаний по сдаче ИС в постоянную эксплуатацию.</li>
                    </ol>
                )
            },
        },
        {
            3: 'Тиражирование (при внедрении на нескольких объектах)',
            5: () => {
                return (
                    <ol>
                        <li>Передача эталона загрузочных модулей ПО и эксплуатационной документации в группу сопровождения.</li>
                        <li>Тиражирование документации.</li>
                        <li>Обучение и консультация пользователей.</li>
                        <li>Постановка ПО и документации на объекты внедрения.</li>
                    </ol>
                )
            }
        },
        {
            2: 'Сопровождение и эксплуатация',
            3: 'Сопровождение (авторский надзор)',
            5: () => {
                return (
                    <ol>
                        <li>Выполнение работ в соответствии с га-рантийными обязательствами.</li>
                        <li>Оказание научно-технических услуг в по-сле гарантийный период.</li>
                        <li>Разработка методики оформления отчетов об ошибках и предложениях на изменение версий.</li>
                    </ol>
                )
            }
        }
    ];
    return (
        <div className='lecture2'>
            <h2>1.2 Процессы и модели жизненного цикла информационных систем</h2>

            <p>Процессы жизненного цикла включают в себя работы, которые могут выполняться в жизненном цикле программных средств, они распределены по пяти основным, восьми вспомогательным и четырем организационным процессам.</p>

            <p>Основные процессы жизненного цикла состоят из пяти процессов, которые реализуются под управлением основных сторон, вовлеченных в жизненный цикл программных средств. Под основной стороной понимают одну из тех организаций, которые инициируют или выполняют разработку, эксплуатацию или сопровождение программных продуктов. Основными сторонами являются заказчик, поставщик, разработчик, оператор и персонал сопровождения программных продуктов. Основными процесса-ми являются:</p>

            <ol>
                <li><i>Процесс заказа.</i> Определяет работы заказчика, то есть организации, которая приобретает систему, программный продукт или программную услугу.</li>
                <li><i>Процесс поставки.</i> Определяет работы поставщика, то есть организации, которая поставляет систему, программный продукт или программную услугу заказчику.</li>
                <li><i>Процесс разработки.</i> Определяет работы разработчика, то есть организации, которая проектирует и разрабатывает программный продукт.</li>
                <li><i>Процесс эксплуатации.</i> Определяет работы оператора, то есть организации, которая обеспечивает эксплуатационное обслуживание вычислительной системы в заданных условиях в интересах пользователей.</li>
                <li><i>Процесс сопровождения.</i> Определяет работы персонала сопровождения, то есть организации, которая предоставляет услуги по сопровождению программного продукта, состоящие в контролируемом изменении программного продукта с целью сохранения его исходного состояния и функциональных возможностей. Данный процесс охватывает перенос и снятие с эксплуатации программного продукта.</li>
            </ol>

            <p>Вспомогательные процессы жизненного цикла состоят из восьми процессов. Вспомогательный процесс является целенаправленной состав-ной частью другого процесса, обеспечивающей успешную реализацию и качество выполнения программного проекта. Вспомогательный процесс, при необходимости, инициируется и используется другим процессом. Вспомогательными процессами являются:</p>

            <ol>
                <li><i>Процесс документирования.</i> Определяет работы по описанию информации, выдаваемой в процессе жизненного цикла.</li>
                <li><i>Процесс управления конфигурацией.</i> Определяет работы по управлению конфигурацией.</li>
                <li><i>Процесс обеспечения качества.</i> Определяет работы по объективному обеспечению того, чтобы программные продукты и процессы соответствовали требованиям, установленным для них, и реализовывались в рамках утвержденных планов. Сов-местные анализы, аудиторские проверки, верификация и аттестация могут использоваться в качестве методов обеспечения качества.</li>
                <li><i>Процесс верификации.</i> Определяет работы (заказчика, поставщика или независимой стороны) по верификации программных продуктов по мере реализации программного проекта.</li>
                <li><i>Процесс аттестации.</i> Определяет работы (заказчика, поставщика или независимой стороны) по аттестации программных продуктов программного проекта.</li>
                <li><i>Процесс совместного анализа.</i> Определяет работы по оценке состояния и результатов какой-либо работы. Данный процесс может использоваться двумя любыми сторонами, когда одна из сторон (проверяющая) проверяет другую сторону (проверяемую) на совместном совещании.</li>
                <li><i>Процесс аудита.</i> Определяет работы по определению соответствия требованиям, планам и договору. Данный процесс может использоваться двумя сторонами, когда одна из сторон (проверяющая) контролирует программные продукты или работы другой стороны (проверяемой).</li>
                <li><i>Процесс решения проблемы.</i> Определяет процесс анализа и устранения проблем (включая несоответствия), независимо от их характера и источника, которые были обнаружены во время осуществления разработки, эксплуатации, сопровождения или других процессов.</li>
            </ol>

            <h3>Организационные процессы жизненного цикла</h3>

            <p>Организационные процессы жизненного цикла состоят из четырех процессов. Они применяются в какой-либо организации для создания и реализации основной структуры, охватывающей взаимосвязанные процессы жизненного цикла и соответствующий персонал, а также для постоянного совершенствования данной структуры и процессов. Эти процессы, как правило, являются типовыми, независимо от области реализации конкретных проектов и договоров; однако уроки, извлеченные из таких проектов и договоров, способствуют совершенствованию организационных вопросов. Организационными процессами являются:</p>

            <ol>
                <li>Процесс управления. Определяет основные работы по управлению, включая управление проектом, при реализации процессов жизненного цикла.</li>
                <li>Процесс создания инфраструктуры. Определяет основные работы по созданию основной структуры процесса жизненного цикла.</li>
                <li>Процесс усовершенствования. Определяет основные работы, которые организация (заказчика, поставщика, разработчика, оператора, персонала сопровождения или администратора другого процесса) выполняет при создании, оценке, контроле и усовершенствовании выбранных процессов жизненного цикла.</li>
                <li>Процесс обучения. Определяет работы по соответствующему обучению персонала.</li>
            </ol>

            <p>Данный ГОСТ Р ИСО/МЭК 12207-99 охватывает жизненный цикл программных средств от концепции замыслов через определение и объединение процессов для заказа и поставки программных продуктов и услуг. Кроме того, данная структура предназначена для контроля и модернизации данных процессов.</p>

            <p>Процессы, определенные в настоящем стандарте, образуют множество общего назначения. Конкретная организация, в зависимости от своих целей, может выбрать соответствующее подмножество процессов для выполнения своих конкретных задач. Поэтому настоящий стандарт следует адаптировать для конкретной организации, проекта или приложения.</p>

            <p>Настоящий стандарт предназначен для использования как в случае отдельно поставляемых программных средств, так и для программных средств, встраиваемых или интегрируемых в общую систему.</p>

            <p>Модели жизненного цикла информационной системы</p>

            <p>Модель жизненного цикла информационной системы может включать:</p>

            <ol>
                <li>Стадии.</li>
                <li>Основные результаты выполнения работ на каждой стадии.</li>
                <li>Ключевые события.</li>
            </ol>

            <p>Под стадией понимается определенный этап процесса разработки информационной системы.</p>

            <p>Жизненный цикл информационной системы характеризуется периодом времени от идеи создания информационной системы и заканчивая моментом вывода ее из эксплуатации и включает в себя следующие стадии:</p>

            <ol>
                <li>Предпроектное обследование.</li>
                <li>Проектирование.</li>
                <li>Создание информационной системы.</li>
                <li>Ввод в эксплуатацию.</li>
                <li>Эксплуатация информационной системы.</li>
                <li>Вывод из эксплуатации.</li>
            </ol>

            <p>Процессы жизненного цикла информационных систем представлены на рис.1.</p>

            <p>Процессы жизненного цикла, определены стандартом ГОСТ Р ИСО/МЭК 15288-2005, могут применяться любой организацией при при-обретении и использовании или создании и поставке системы.</p>

            <p>Они распространяются на любой уровень системной иерархии и на любую стадию жизненного цикла.</p>

            <p>Процессы жизненного цикла основываются на принципах модульности (максимальная слаженность функций процесса и минимальная связь между процессами) и собственности (процесс связывается с ответственностью). Функции, которые осуществляются данными процессами, определяются в зависимости от конкретных целей, результатов и набора действий, составляющих данный процесс. Процессы, описанные в настоящем стандарте, не препятствуют и не исключают использование дополнительных процессов, которые организация посчитает необходимыми.</p>
            <LifeCicle />
            <p style={{textAlign: 'center', marginTop: '15px'}}>Рис. 1 Процессы жизненного цикла информационной системы</p>
            {/* {<Image src='assets/img/lab1.2/1.png' annotation='Рис. 1 Процессы жизненного цикла информационной системы' />} */}

            <p>Управление процессами жизненного цикла ИС</p>

            <p>Цель управления процессами жизненного цикла системы заключается в гарантировании доступности эффективных процессов жизненного цикла для использования организацией. Данный процесс обеспечивает процессы жизненного цикла системы, которые согласованы с целями и политикой организации, определены, адаптированы и поддержаны соответствующим образом для учета особенностей отдельных проектов и способны реализовываться с помощью эффективных проверенных методов и инструментальных средств.</p>

            <p>В результате эффективного управления</p>

            <p>процессами жизненного цикла системы:</p>

            <p>a) определяются процессы жизненного цикла системы, которые будут использоваться организацией;</p>

            <p>b) определяется политика применения процессов жизненного цикла системы;</p>

            <p>c) определяется политика адаптации процессов жизненного цикла системы для удовлетворения потребностей отдельных проектов;</p>

            <p>d) определяются критерии оценки результатов применения процессов жизненного цикла системы;</p>

            <p>e) предпринимаются действия по совершенствованию способов определения и применения процессов жизненного цикла системы.</p>

            <p>При реализации процессов управления процессами жизненного цикла системы организация должна осуществлять следующие действия в соответствии с принятой политикой и процедурами:</p>

            <p>a) устанавливать стандартные наборы процессов жизненного цикла систем для соответствующих стадий жизненного цикла системы;</p>

            <p>b) определять приемлемые политику и процедуры адаптации и требования к их утверждению;</p>

            <p>c) определять методы и инструментальные средства, которые поддерживают выполнение процессов жизненного цикла системы;</p>

            <p>d) по возможности устанавливать показатели, которые позволяют определять характеристики выполненных стандартных процессов;</p>

            <p>e) контролировать выполнение процесса, сохранять и анализировать показатели процесса и определять тенденции по отношению к критериям предприятия;</p>

            <p>f) определять возможности для усовершенствования стандартных процессов жизненного цикла систем;</p>

            <p>g) совершенствовать имеющиеся процессы, методы и инструментальные средства, используя найденные возможности.</p>

            <Table columns={columns} dataSource={data} bordered pagination={false} />
            <p>Каждая система имеет свой жизненный цикл. Жизненный цикл может быть описан с использованием абстрактной функциональной модели, представляющей концептуализацию потребности в системе, ее реализации, применения, развития и ликвидации.</p>

            <p>Система развивается на протяжении жизненного цикла в результате действий, осуществляемых и управляемых людьми, работающими в организациях и использующими определенные процессы в своей деятельности. Детали модели жизненного цикла выражаются в терминах этих процессов, их результатов, взаимосвязи и возникновения. Настоящий стандарт определяет множество процессов, названных процессами жизненного цикла, при помощи которых может быть смоделирован жизненный цикл системы.</p>

            <p>Жизненные циклы различаются по свойствам, целям, использованию системы, а также по преобладающим условиям. Тем не менее, несмотря на очевидное множество различий в жизненных циклах систем, существует базовый набор стадий жизненного цикла, составляющих полный жизненный цикл любой системы. Каждая стадия имеет определенную цель и вклад в полный жизненный цикл и рассматривается при планировании и выполнении жизненного цикла системы.</p>

            <p>Аналогично тому, как все системные элементы осуществляют вклад в систему как в единое целое, так и каждая стадия жизненного цикла должна учитываться на любой другой ее стадии. Следовательно, участвующие стороны должны координировать свои действия и кооперироваться друг с другом на протяжении всего жизненного цикла. Синергия стадий жизненного цикла и сторон, вкладывающих средства в реализацию функциональности на этих стадиях, является необходимой для успешного осуществления проектных мероприятий. Тесная связь и, по возможности, единение проектных команд, различных функций и организаций, ответственных за другие стадии жизненного цикла, приводят к логичности и согласованности жизненного цикла.</p>

            <p>Набольшее распространение получили следующие модели жизненного цикла информационных систем (ИС): каскадная (классическая или водопадная), итерационная и спиральная.</p>

            <b><i><p>Каскадная (классическая, водопадная) модель жизненного цикла информационной системы</p></i></b>

            <p>Модель была предложена в 1970 году Уинстоном Ройсом. Переход на следующий этап осуществляется после полного окончания работ по предыдущему этапу, при этом оформляется полный комплект рабочей документации. Все этапы выполняются в строгой последовательности с утвержденными сроками и четкими затратами. Это основные достоинства каскадной модели ЖЦ ИС, которая применялась в условиях полной определённости решаемых задач и совершенно не приемлема, когда и разработчики, и заказчики не имеют четкого видения всех особенностей проектируемой ИС. Кроме того, невозможно идти дальше, пока не сдан предыдущий этап, а после сдачи нельзя возвращаться к нему для устранения обнаруженных недочетов, что серьезно затрудняет работы по совершенствованию и доработке, создаваемой ИС. Эта модель нравиться и заказчикам, и разработчикам по причине жесткой дисциплины финансирования этапов только после их предъявления. Но полностью отсутствует гибкость в работе над созданием ИС. Каскадная модель представлена на рис.2.</p>

            <p>На практике, все же приходится возвращаться к предыдущим этапам и в этом случае, в последнее время наиболее востребованной стала итерационная модель ЖЦ ИС.</p>

            {<Image src='assets/img/lab1.2/2.png' annotation='Рисунок 2 – Каскадная (водопадная, классическая) модель ЖЦ ИС' />}

            <b><i><p>Итерационная модель жизненного цикла ИС</p></i></b>

            <p><b>Поэтапная модель с промежуточным контролем</b> — итерационная модель разработки информационной системы. Каждый этап имеет обратные связи в процессе корректировки и создает условия для корректировки ранее созданных этапов. При этом трудоемкость работ и временные затраты существенно сокращаются по сравнению с водопадной моделью жизненного цикла. Итерационная модель ЖЦ информационной системы представлена на рис.3.</p>

            <p>Создание информационной системы – это организованный процесс построения и последовательного преобразования согласованных моделей на всех этапах жизненного цикла. При этом все разработанные модели находятся в репозитории проекта и доступны всем разработчикам, что позволяет эффективно вести одновременную работу над проектированием и созданием информационной системы.</p>

            {<Image src='assets/img/lab1.2/3.png' annotation='Рисунок 3 – Итерационная модель ЖЦ ИС' />}

            <p><strong><em>Спиральная модель жизненного цикла информационной системы</em></strong></p>

            <p><strong>Спиральная модель</strong> предложена Барри Боэм в 1988 году и определяет, в основном стартовые этапы жизненного цикла информационной системы. При этом обосновывается и проверяется возможность реализации спроектированных технических решений.</p>

            <p>На каждом витке создается прототип проектируемой информационной системы, который на следующих витках спирали ЖЦ ИС совершенствуется, дополняется и доводится до полного внедрения. При этом не обязательно дожидаться окончания каждого этапа, данная модель позволяет переходить на следующие витки спирали и решать проблемы или недоделки на следующем уровне, что делает работу над проектом более эффективной, гибкой и завершить в более сжатые сроки.</p>

            <p>Новый виток спирали соответствует поэтапной модели создания фрагмента информационной системы. При использовании спиральной модели ЖЦ:</p>

            <ul>
                <li>происходит ориентация на модернизацию информационной системы;</li>
                <li>осуществляется аккумулирование всех решений в процессе проектирования и создания моделей и прототипов информационной системы;</li>
                <li>проводится анализ издержек и всех рисков в процессе проектирования ИС.</li>
            </ul>

            <p>Спиральный процесс состоит из следующей повторяющейся последовательности:</p>

            <ol>
                <li>Определение требований.</li>
                <li>Анализ.</li>
                <li>Проектирование.</li>
                <li>Реализация и тестирование.</li>
                <li>Интеграция.</li>
                <li>Внедрение.</li>
            </ol>

            <p>Этот многократный цикл, завершающийся созданием новой версии информационной системы представлен на рис. 4.</p>

            <p>Для применения спиральной модели ЖЦ ИС может быть несколько причин, это необходимость минимизации рисков и возможность представления заказчику прототип или эскизную версию проекта для конкретизации пожеланий и учета их в следующих циклах. А также в случае если разрабатываемая информационная система достаточно сложна и существует реальная необходимость создавать промежуточные версии продукта, не откладывая эту работу на финишные этапы, как это предписывает водопадная модель.</p>

            <p>Основная задача спиральной модели жизненного цикла информационной системы заключается в том, чтобы на каждой итерации создавать очередную версию системы, используя разработанный прототип предыдущих этапов. Такая модель позволяет более гибко работать с заказчиком, постоянно учитывать его замечания и предложения, совершенствовать проектируемую систему в процессе каждого нового витка спирали.</p>

            {<Image src='assets/img/lab1.2/4.png' annotation='Рисунок 4 – Спиральная модель ЖЦ ИС' />}
        </div>
    )
}

Lecture2.propTypes = {

}
