import React from 'react'
import { Table } from 'antd'
import { Image } from '../../../../../modules/Image'


export function Table1(props) {
    const columns = [
        {
            title: 'Тип',
            dataIndex: '1',
            render: (text, r, index) => {
                const obj = {
                    children: text,
                    props: {},
                };
                if (index === 0) {
                    obj.props.rowSpan = 9;
                }
                if (index > 0 || index > 8) {
                    obj.props.rowSpan = 0;
                }
                if (index === 9) {
                    obj.props.rowSpan = 4;
                }
                if(index === 13) {
                    obj.props.rowSpan = 1;
                }

                return obj;

            }
        },
        {
            title: 'Наименование',
            dataIndex: '2',
        },
        {
            title: 'Обозначение',
            dataIndex: '3',
            render: (text, r, index) => {
                if (typeof text === 'function') {
                    return text()
                }
                return text
            },
        },
        {
            title: 'Определение (семантика)',
            dataIndex: '4',
        },
    ]

    const data = [
        {
            1: 'Структурная',
            2: 'Класс (class)',
            3: () => <Image src='assets/img/lab12/2.jpg' isModal={false} />,
            4: 'Множество объектов, имеющих общую структуру и поведение',
        },
        {
            2: 'Объект (object)',
            3: () => <Image src='assets/img/lab12/3.jpg' isModal={false} />,
            4: 'Абстракция реальной или воображаемой сущности с четко выраженными концептуальными границами, индивидуальностью (идентичностью), состоянием и поведением. С точки зрения UML объекты являются экземплярами класса (экземплярами сущности)',
        },
        {
            2: 'Актер (actor)',
            3: () => <Image src='assets/img/lab12/4.jpg' isModal={false} />,
            4: 'Внешняя по отношению к системе сущность, которая взаимодействует с системой и использует ее функциональные возможности для достижения определенных целей или решения частных задач. Таким образом актер – это внешний источник или приемник информации',
        },
        {
            2: 'Вариант использования (use case)',
            3: () => <Image src='assets/img/lab12/5.jpg' isModal={false} />,
            4: 'Описание выполняемых системой действий, которая приводит к значимому для актера результату',
        },
        {
            2: 'Состояние (state)',
            3: () => <Image src='assets/img/lab12/6.jpg' isModal={false} />,
            4: 'Описание момента в ходе жизни сущности, когда она удовлетворяет некоторому условию, выполняет некоторую деятельность или ждет наступления некоторого события',
        },
        {
            2: 'Кооперация (collaboration)',
            3: () => <Image src='assets/img/lab12/7.jpg' isModal={false} />,
            4: 'Описание совокупности экземпляров актеров, объектов и их взаимодействия в процессе решения некоторой задачи',
        },
        {
            2: 'Компонент (component)',
            3: () => <Image src='assets/img/lab12/8.jpg' isModal={false} />,
            4: 'Физическая часть системы (файл), в том числе модули системы, обеспечивающие реализацию согласованного набора интерфейсов',
        },
        {
            2: 'Интерфейс (interface)',
            3: () => <Image src='assets/img/lab12/9.jpg' isModal={false} />,
            4: 'Совокупность операций, определяющая сервис (набор услуг), предоставляемый классом или компонентом',
        },
        {
            2: 'Узел (node)',
            3: () => <Image src='assets/img/lab12/10.jpg' isModal={false} />,
            4: 'Физическая часть системы (компьютер, принтер и т. д.), предоставляющая ресурсы для решения задачи',
        },
        {
            1: 'Группирующая',
            2: 'Пакет (package)',
            3: () => <Image src='assets/img/lab12/11.jpg' isModal={false} />,
            4: 'Общий механизм группировки элементов. В отличие от компонента, пакет – чисто концептуальное (абстрактное) понятие. Частными случаями пакета являются система и модель',
        },
        {
            2: 'Фрагмент (fragment)',
            3: () => <Image src='assets/img/lab12/12.jpg' isModal={false} />,
            4: 'Область специфического взаимодействия экземпляров актеров и объектов. Любая диаграмма в UML также является фрагментом – фрагментом (частью) проекта.',
        },
        {
            2: 'Раздел деятельности (activity partition)',
            3: () => <Image src='assets/img/lab12/13.jpg' isModal={false} />,
            4: 'Группа операций (зона ответственности), выполняемых одной сущностью (актером, объектом, компонентом, узлом и т.д.)',
        },
        {
            2: 'Прерываемый регион (interruptible activity region)',
            3: () => <Image src='assets/img/lab12/14.jpg' isModal={false} />,
            4: 'Группа операций, обычная последовательность выполнения которых может прервана в результате наступления нестандартной ситуации',
        },
        {
            1: 'Поясняющая',
            2: 'Примечание (comment)',
            3: () => <Image src='assets/img/lab12/15.jpg' isModal={false} />,
            4: 'Комментарий к элементу. Присоединяется к комментируемому элементу штриховой линией',
        },
    ]
    return (
        <div>
            <Table columns={columns} dataSource={data} bordered pagination={false} />
        </div>
    )
}